apiVersion: apps/v1
kind: Deployment
metadata: { name: {{ include "caddy-waf.fullname" . }} }
spec:
  replicas: 2
  selector: { matchLabels: { app: {{ include "caddy-waf.name" . }} } }
  template:
    metadata: { labels: { app: {{ include "caddy-waf.name" . }} } }
    spec:
      containers:
        - name: caddy
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports: [ { containerPort: 80 }, { containerPort: 443 } ]
          env:
            {{- if .Values.otel.enabled }}
            - name: OTEL_SERVICE_NAME
              value: {{ .Values.otel.serviceName | quote }}
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.otel.otlpEndpoint | quote }}
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: {{ .Values.otel.protocol | quote }}
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: {{ .Values.otel.resourceAttrs | quote }}
            {{- end }}
          volumeMounts:
            - { name: caddyfile, mountPath: /etc/caddy/Caddyfile, subPath: Caddyfile, readOnly: true }
            - { name: sites, mountPath: /etc/caddy/sites }
            - { name: rules, mountPath: /etc/coraza }
            - { name: adminsock, mountPath: /run/caddy-admin }
      volumes:
        - name: caddyfile
          configMap: { name: {{ include "caddy-waf.fullname" . }}-caddyfile }
        - name: sites
          persistentVolumeClaim: { claimName: {{ include "caddy-waf.fullname" . }}-sites }
        - name: rules
          persistentVolumeClaim: { claimName: {{ include "caddy-waf.fullname" . }}-rules }
        - name: adminsock
          emptyDir: { medium: "Memory" }
